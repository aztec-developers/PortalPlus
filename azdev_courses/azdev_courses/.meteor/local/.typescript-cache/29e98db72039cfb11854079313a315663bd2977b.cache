{"code":"var core_1 = require(\"@angular/core\");\r\n/*\r\n  Import collections\r\n*/\r\nvar cscourses_collection_1 = require(\"../../../../../both/collections/cscourses.collection\");\r\nvar queuedcourses_collection_1 = require(\"../../../../../both/collections/queuedcourses.collection\");\r\nvar semestercourses_collection_1 = require(\"../../../../../both/collections/semestercourses.collection\");\r\n/*\r\n    Import any other internal components here.\r\n*/\r\nvar semesters_component_html_1 = require(\"./semesters.component.html\");\r\nvar semesters_component_scss_1 = require(\"./semesters.component.scss\");\r\nvar SemestersComponent = (function () {\r\n    function SemestersComponent() {\r\n        this.cscourses = cscourses_collection_1.CsCourses.find({}).zone();\r\n        this.semestercourses = semestercourses_collection_1.SemesterCourses.find({}).zone();\r\n        this.queuedcourses = queuedcourses_collection_1.QueuedCourses.find({}).zone();\r\n    }\r\n    /*\r\n      removeCourse() takes the course in the Semester and removes it.\r\n    */\r\n    SemestersComponent.prototype.removeCourse = function (course) {\r\n        semestercourses_collection_1.SemesterCourses.remove(course._id);\r\n    };\r\n    /*\r\n      queueMoveBack() takes the course in Queue and moves it back\r\n      into CsCourses (deletes from QueuedCourses)\r\n    */\r\n    SemestersComponent.prototype.queueMoveBack = function (course) {\r\n        queuedcourses_collection_1.QueuedCourses.remove(course._id);\r\n    };\r\n    /*\r\n      moveToQueue() takes the course from CsCourses and moves it into\r\n      QueuedCourses.\r\n    */\r\n    SemestersComponent.prototype.moveToQueue = function (course) {\r\n        queuedcourses_collection_1.QueuedCourses.insert(course);\r\n    };\r\n    /*\r\n      addCourses() takes the QueuedCourses and Adds them to the SemesterCourses.\r\n    */\r\n    SemestersComponent.prototype.addCourses = function () {\r\n        var coursesToAdd = queuedcourses_collection_1.QueuedCourses.find({}, { fields: { _id: 0 } }).fetch();\r\n        coursesToAdd.forEach(function (course) {\r\n            // console.log(myDoc);\r\n            semestercourses_collection_1.SemesterCourses.insert(course);\r\n        });\r\n    };\r\n    return SemestersComponent;\r\n}());\r\nSemestersComponent = __decorate([\r\n    core_1.Component({\r\n        selector: 'semesters',\r\n        template: semesters_component_html_1.default,\r\n        styles: [semesters_component_scss_1.default]\r\n    }),\r\n    __metadata(\"design:paramtypes\", [])\r\n], SemestersComponent);\r\nexports.SemestersComponent = SemestersComponent;\r\n//# sourceMappingURL=semesters.component.js.map","sourceMap":{"version":3,"file":"semesters.component.js","sourceRoot":"","sources":["client/imports/app/contentscreen/semesters/semesters.component.ts"],"names":[],"mappings":"AAAA,sCAA0C;AAC1C;;EAEE;AACF,6FAAiF;AACjF,qGAAyF;AACzF,yGAA6F;AAM7F;;EAEE;AACF,uEAAkD;AAClD,uEAA+C;AAQ/C,IAAa,kBAAkB;IAK7B;QACE,IAAI,CAAC,SAAS,GAAG,gCAAS,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC3C,IAAI,CAAC,eAAe,GAAG,4CAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QACvD,IAAI,CAAC,aAAa,GAAG,wCAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;IACrD,CAAC;IAED;;MAEE;IACF,yCAAY,GAAZ,UAAa,MAAc;QACzB,4CAAe,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACrC,CAAC;IAED;;;MAGE;IACF,0CAAa,GAAb,UAAc,MAAc;QAC1B,wCAAa,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnC,CAAC;IAED;;;MAGE;IACF,wCAAW,GAAX,UAAY,MAAc;QACxB,wCAAa,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED;;MAEE;IACF,uCAAU,GAAV;QACE,IAAI,YAAY,GAAG,wCAAa,CAAC,IAAI,CAAC,EAAE,EAAE,EAAC,MAAM,EAAG,EAAC,GAAG,EAAG,CAAC,EAAC,EAAC,CAAC,CAAC,KAAK,EAAE,CAAC;QAExE,YAAY,CAAC,OAAO,CAAE,UAAS,MAAM;YACnC,sBAAsB;YACtB,4CAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;IACL,CAAC;IACH,yBAAC;AAAD,CAAC,AA7CD,IA6CC;AA7CY,kBAAkB;IAN9B,gBAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,QAAQ,oCAAA;QACR,MAAM,EAAE,CAAC,kCAAK,CAAC;KAChB,CAAC;;GAEW,kBAAkB,CA6C9B;AA7CY,gDAAkB","sourcesContent":["import { Component } from '@angular/core';\n/*\n  Import collections\n*/\nimport { CsCourses } from '../../../../../both/collections/cscourses.collection';\nimport { QueuedCourses } from '../../../../../both/collections/queuedcourses.collection';\nimport { SemesterCourses } from '../../../../../both/collections/semestercourses.collection';\n/*\n  Import models\n */\nimport { Course } from '../../../../../both/models/course.model';\nimport { Observable } from 'rxjs/Observable';\n/*\n\tImport any other internal components here.\n*/\nimport template from './semesters.component.html';\nimport style from './semesters.component.scss';\n\n@Component({\n  selector: 'semesters',\n  template,\n  styles: [style]\n})\n\nexport class SemestersComponent {\n  cscourses: Observable<Course[]>;\n  queuedcourses: Observable<Course[]>;\n  semestercourses: Observable<Course[]>;\n\n  constructor() {\n    this.cscourses = CsCourses.find({}).zone();\n    this.semestercourses = SemesterCourses.find({}).zone();\n    this.queuedcourses = QueuedCourses.find({}).zone();\n  }\n\n  /*\n    removeCourse() takes the course in the Semester and removes it.\n  */\n  removeCourse(course: Course): void {\n    SemesterCourses.remove(course._id);\n  }\n\n  /*\n    queueMoveBack() takes the course in Queue and moves it back \n    into CsCourses (deletes from QueuedCourses)\n  */\n  queueMoveBack(course: Course): void {\n    QueuedCourses.remove(course._id);\n  }\n\n  /*\n    moveToQueue() takes the course from CsCourses and moves it into\n    QueuedCourses.\n  */\n  moveToQueue(course: Course): void {\n    QueuedCourses.insert(course);\n  }\n\n  /*\n    addCourses() takes the QueuedCourses and Adds them to the SemesterCourses.\n  */\n  addCourses(): void {\n    var coursesToAdd = QueuedCourses.find({}, {fields : {_id : 0}}).fetch();\n    \n    coursesToAdd.forEach( function(course) {\n      // console.log(myDoc);\n      SemesterCourses.insert(course);\n    });\n  }\n}\n"]},"version":"1","isExternal":true,"dependencies":{"modules":["both/collections/cscourses.collection.ts","both/collections/queuedcourses.collection.ts","both/collections/semestercourses.collection.ts","both/models/course.model.ts"],"refFiles":[],"refTypings":[],"mappings":{"../../../../../both/collections/cscourses.collection":{"resolvedPath":"both/collections/cscourses.collection","external":false},"../../../../../both/collections/queuedcourses.collection":{"resolvedPath":"both/collections/queuedcourses.collection","external":false},"../../../../../both/collections/semestercourses.collection":{"resolvedPath":"both/collections/semestercourses.collection","external":false},"../../../../../both/models/course.model":{"resolvedPath":"both/models/course.model","external":false}}},"diagnostics":{"syntacticErrors":[],"semanticErrors":[{"code":2307,"fileName":"client/imports/app/contentscreen/semesters/semesters.component.ts","message":"Cannot find module '@angular/core'.","line":1,"column":27},{"code":2307,"fileName":"client/imports/app/contentscreen/semesters/semesters.component.ts","message":"Cannot find module 'rxjs/Observable'.","line":12,"column":28}]},"hash":"29e98db72039cfb11854079313a315663bd2977b"}